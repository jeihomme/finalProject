<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- 인터셉터 설정 -->
<!-- 	<interceptors> -->
<!-- 		<interceptor> -->
<!-- 			<mapping path="/interceptor/admin/**"/> -->
<!-- 				<exclude-mapping path="/interceptor/admin/adminFail"/> -->
<!-- 			<beans:bean -->
<!-- 				class="interceptor.interceptor.AdminInterceptor"/> -->
<!-- 		</interceptor> -->
		
<!-- 		<interceptor> -->
<!-- 			<mapping path="/board/write/**"/> -->
<!-- 				<exclude-mapping path="/board/write/noLogin"/> -->
<!-- 			<beans:bean -->
<!-- 				class="interceptor.interceptor.BoardInterceptor"/> -->
<!-- 		</interceptor> -->
<!-- 	</interceptors> -->
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

<!-- 	JSP 기반의 ViewReseolver -->
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
<!-- 		order는 우선순위 -->
		<beans:property name="order" value="2" />
	</beans:bean>
	
	<!-- URL 기반의 ViewResolver -->
	<beans:bean id="tilesViewResolver"
	class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<beans:property name="order" value="1" />
	</beans:bean>
	
	<!-- UI 레이아웃 구성 설정파일 -->
	<beans:bean id="tilesConfigurer"
	class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/tiles/template.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
<!-- 	자바 빈 기반의 ViewResolver -->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0" />
	</beans:bean>
	
<!-- 	다운로드뷰를 down이라는 이름으로 빈등록 -->
<!-- 	<beans:bean id="down" class="file.view.DownloadView" /> -->
	
<!-- 	json응답을 위한 jsonView 빈 등록 -->
	<beans:bean
		id="jsonView"
		class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
			<beans:property
				name="contentType"
				value="application/json;charset=utf-8"/>
	</beans:bean>
	
	<!-- MultipartResolver -->
	<!-- 	파일 업로드 객체 -->
	<beans:bean
	id="multipartResolver"
	class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
	>
		<beans:property name="maxInMemorySize" value="1048576"></beans:property>
		<beans:property name="maxUploadSize" value="10485760"></beans:property>
		
	</beans:bean>
	
	<beans:bean id="uploadPath" class="java.lang.String">
		<beans:constructor-arg value="http://ec2-52-78-8-12.ap-northeast-2.compute.amazonaws.com/final/img">
		</beans:constructor-arg>
	</beans:bean>
	
	<context:component-scan base-package="web" />
</beans:beans>
